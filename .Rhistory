ggtitle('Average Salary of Software Developer, 2017') +
xlab('Mean Salary in US Dollars') +
ylab('Developer Type') +
labs(subtitle = 'Salary data from US, UK and Australia',
caption="Source - Stack Overflow Annual Developer Survey, 2017") +
theme(plot.caption = element_text(size = 9,color = '#666666',face = "italic"),
plot.subtitle = element_text(size = 9,color = '#666666',face = "italic")) +
theme_minimal()
ggplot(Salary_Summary,aes(DeveloperType,MeanSalary,label="",fill = colour)) +
geom_bar(stat='identity',aes(fill = colour)) +
scale_fill_manual(values=c(positive="#2171b5",negative="#6baed6")) +
coord_flip() +
guides(fill=FALSE) +
ggtitle('Average Salary of Software Developer, 2017') +
xlab('Mean Salary in US Dollars') +
ylab('Developer Type') +
labs(subtitle = 'Salary data from US, UK and Australia',
caption="Source - Stack Overflow Annual Developer Survey, 2017") +
theme_minimal() +
theme(plot.caption = element_text(size = 9,color = '#666666',face = "italic"),
plot.subtitle = element_text(size = 9,color = '#666666',face = "italic"))
ggplot(Salary_Summary,aes(DeveloperType,MeanSalary,label="",fill = colour)) +
geom_bar(stat='identity',aes(fill = colour)) +
scale_fill_manual(values=c(positive="#2171b5",negative="#6baed6")) +
coord_flip() +
guides(fill=FALSE) +
ggtitle('Average Salary of Software Developer, 2017') +
xlab('Mean Salary in US Dollars') +
ylab('Developer Type') +
labs(subtitle = 'Salary data from US, UK and Australia',
caption="Source - Stack Overflow Annual Developer Survey, 2017") +
theme_minimal() +
theme(plot.caption = element_text(size = 9,color = '#666666',face = "italic"),
plot.subtitle = element_text(color = '#999999',face = "italic"))
ggplot(Salary_Summary,aes(DeveloperType,MeanSalary,label="",fill = colour)) +
geom_bar(stat='identity',aes(fill = colour)) +
scale_fill_manual(values=c(positive="#2171b5",negative="#6baed6")) +
coord_flip() +
guides(fill=FALSE) +
ggtitle('Average Salary of Software Developer, 2017') +
xlab('Mean Salary in US Dollars') +
ylab('Developer Type') +
labs(subtitle = 'Salary data from US, UK and Australia',
caption="Source - Stack Overflow Annual Developer Survey, 2017") +
theme_minimal() +
theme(plot.caption = element_text(size = 9,color = '#666666',face = "italic"),
plot.subtitle = element_text(color = '#333333',face = "italic"))
ggplot(Salary_Summary,aes(DeveloperType,MeanSalary,label="",fill = colour)) +
geom_bar(stat='identity',aes(fill = colour)) +
scale_fill_manual(values=c(positive="#2171b5",negative="#6baed6")) +
coord_flip() +
guides(fill=FALSE) +
ggtitle('Average Salary of Software Developer, 2017') +
xlab('Developer Type') +
ylab('Mean Salary in US Dollars') +
labs(subtitle = 'Salary data from US, UK and Australia',
caption="Source - Stack Overflow Annual Developer Survey, 2017") +
theme_minimal() +
theme(plot.caption = element_text(size = 9,color = '#666666',face = "italic"),
plot.subtitle = element_text(color = '#333333',face = "italic"))
ggplot(Salary_Summary,aes(DeveloperType,MeanSalary,label="",fill = colour)) +
geom_bar(stat='identity',aes(fill = colour)) +
scale_fill_manual(values=c(positive="#2171b5",negative="#6baed6")) +
coord_flip() +
guides(fill=FALSE) +
ggtitle('Average Salary of Software Developer, 2017') +
xlab('') +
ylab('Mean Salary in US Dollars') +
labs(subtitle = 'Salary data from US, UK and Australia',
caption="Source - Stack Overflow Annual Developer Survey, 2017") +
theme_minimal() +
theme(plot.caption = element_text(size = 9,color = '#666666',face = "italic"),
plot.subtitle = element_text(color = '#333333',face = "italic"))
plot(sk2)
Education = Data2017 %>% select(Respondent,EducationTypes,SelfTaughtTypes,DeveloperType) %>%
filter(!is.na(EducationTypes) & !is.na(EducationTypes) & DeveloperType %in%
c('Data scientist','Machine learning specialist','Developer with a statistics or mathematics background'))
Education_long <- cSplit(indt = Education,
splitCols = c('EducationTypes','SelfTaughtTypes','DeveloperType'), sep = ";", direction = "long")
x = data.frame(table(Education_long$DeveloperType,Education_long$EducationTypes))
y = data.frame(table(Education_long$EducationTypes,Education_long$SelfTaughtTypes))
defaulter<-rbind(x,y)
# Plotting
library(googleVis)
sk2 <- gvisSankey(defaulter, from='Var1', to='Var2', weight='Freq',
options=list(height=400, width=600))
plot(sk2)
install.packages('googleVis')
install.packages("googleVis")
library(googleVis)
plot(sk2, tag = 'chart')
library(dplyr)
library(ggvis)
require(ggplot2)
require(splitstackshape)
plot.gvis?
?plot.gvis
getOption("gvis.tags")
options(gvis.plot.tag='chart')
plot.gvis.tag
require(markdown)
library(googleVis)
op <- options(gvis.plot.tag='chart')
## Add the mean
CityPopularity$Mean=mean(CityPopularity$Popularity)
CC <- (CityPopularity, xvar='City',
## Add the mean
CityPopularity$Mean=mean(CityPopularity$Popularity)
CC = (CityPopularity, xvar='City',
CityPopularity
## Add the mean
CityPopularity$Mean=mean(CityPopularity$Popularity)
CC = (CityPopularity, xvar='City',
## Add the mean
CityPopularity$Mean=mean(CityPopularity$Popularity)
CC = (CityPopularity, xvar='City', yvar=c('Mean', 'Popularity'),
Geo <- gvisGeoChart(Exports, locationvar='Country', colorvar='Profit',
options=list(height=300, width=350))
Tbl <- gvisTable(Exports, options=list(height=300, width=200))
plot(gvisMerge(Geo, Tbl, horizontal=TRUE))
M <- gvisMotionChart(Fruits, 'Fruit', 'Year',
options=list(width=400, height=350))
plot(M)
devtools::install_github('mages/googleVis')
install.packages("devtools")
devtools::install_github('mages/googleVis')
devtools::install_github('mages/googleVis')
install.packages('rMarkdown')
install.packages('rmarkdown')
install.packages("rmarkdown")
devtools::install_github('mages/googleVis')
library(dplyr)
library(ggvis)
require(ggplot2)
require(splitstackshape)
op = options(gvis.plot.tag='chart')
Data2017 = read.csv('data/survey_results_public.csv')
Education = Data2017 %>% select(Respondent,EducationTypes,SelfTaughtTypes,DeveloperType) %>%
filter(!is.na(EducationTypes) & !is.na(EducationTypes) & DeveloperType %in%
c('Data scientist','Machine learning specialist','Developer with a statistics or mathematics background'))
Education_long <- cSplit(indt = Education,
splitCols = c('EducationTypes','SelfTaughtTypes','DeveloperType'), sep = ";", direction = "long")
x = data.frame(table(Education_long$DeveloperType,Education_long$EducationTypes))
y = data.frame(table(Education_long$EducationTypes,Education_long$SelfTaughtTypes))
defaulter<-rbind(x,y)
# Plotting
library(googleVis)
op <- options(gvis.plot.tag='chart')
sk2 <- gvisSankey(defaulter, from='Var1', to='Var2', weight='Freq',
options=list(height=400, width=600))
plot(sk2, tag='chart')
sk2
##
## Time Series of Growth of Languages
##
str(Data2017)
txt <- c("arm","foot","lefroo", "bafoobar")
if(length(i <- grep("foo", txt)))
cat("'foo' appears at least once in\n\t", txt, "\n")
i # 2 and 4
txt[i]
txt <- c("arm","foot","lefroo", "bafoobar")
if(length(i <- grep("foo", txt)))
cat("'foo' appears at least once in\n\t", txt, "\n")
i # 2 and 4
txt[i]
grep("foo", txt)
##
## Time Series of Growth of Languages
##
str(Data2017)
##
## Time Series of Growth of Languages
##
str(Data2017$HaveWorkedLanguage)
##
## Time Series of Growth of Languages
##
head(Data2017$HaveWorkedLanguage)
##
## Time Series of Growth of Languages
##
head(Data2017$HaveWorkedLanguage,15)
##
## Time Series of Growth of Languages
##
head(Data2017$HaveWorkedLanguage,25)
Series = Data2017 %>% select(Respondent,HaveWorkedLanguage,DeveloperType) %>%
filter(!is.na(EducationTypes) & !is.na(EducationTypes)) %>%
DeveloperType %in% filter(Data2017, grepl('Python;', HaveWorkedLanguage))
Series = Data2017 %>% select(Respondent,HaveWorkedLanguage) %>%
filter(!is.na(HaveWorkedLanguage)) %>%
DeveloperType %in% filter(Data2017, grepl('Python;', HaveWorkedLanguage))
Series = Data2017 %>% select(Respondent,HaveWorkedLanguage) %>%
filter(!is.na(HaveWorkedLanguage)) %>%
HaveWorkedLanguage %in% filter(Data2017, grepl('Python;', HaveWorkedLanguage))
Series = Data2017 %>% select(Respondent,HaveWorkedLanguage) %>%
filter(!is.na(HaveWorkedLanguage)) %>%
HaveWorkedLanguage %in% filter(grepl('Python;', HaveWorkedLanguage))
Series = Data2017 %>% select(Respondent,HaveWorkedLanguage)
Series = Data2017 %>% select(Respondent,HaveWorkedLanguage) %>%
filter(!is.na(HaveWorkedLanguage)) %>%
filter(grepl('Python;', HaveWorkedLanguage))
Series = Data2017 %>% select(Respondent,HaveWorkedLanguage) %>%
filter(!is.na(HaveWorkedLanguage) & grepl('Python;', HaveWorkedLanguage))
View(Series)
Series = Data2017 %>% select(Respondent,HaveWorkedLanguage) %>%
filter(!is.na(HaveWorkedLanguage))
Series_long <- cSplit(indt = Series, splitCols = 'HaveWorkedLanguage', sep = ";", direction = "long")
Series_summary = Series_long %>% group_by(HaveWorkedLanguage) %>% summarise(Freq = n())
Series_summary
## set the levels
Series_summary$HaveWorkedLanguage = Series_summary$HaveWorkedLanguage %>%
factor(levels = Series_summary$HaveWorkedLanguage[order(Series_summary$Freq)])
Series_summary = Series_summary %>% filter(HaveWorkedLanguage %in% c('Python','SQL','Java','R'))
View(Series_summary)
## set the levels
Series_summary$HaveWorkedLanguage = Series_summary$HaveWorkedLanguage %>%
factor(levels = Series_summary$HaveWorkedLanguage[order(Series_summary$Freq)])
Series_long <- cSplit(indt = Series, splitCols = 'HaveWorkedLanguage', sep = ";", direction = "long")
Series_summary = Series_long %>%
filter(HaveWorkedLanguage %in% c('Python','SQL','Java','R')) %>%
group_by(HaveWorkedLanguage) %>% summarise(Freq = n())
View(Series_summary)
Series2017 = Series_long %>%
filter(HaveWorkedLanguage %in% c('Python','SQL','Java','R')) %>%
group_by(HaveWorkedLanguage) %>% summarise(Freq = n())
rm(Series_summary)
Data2016 = read.csv('data/2016 Stack Overflow Survey Results/2016 Stack Overflow Survey Responses.csv')
Series2017
Series2017 = mutate(Percentage = Freq/sum(Freq))
Series2017 = Series2017 %>% mutate(Percentage = Freq/sum(Freq))
Series_long = cSplit(indt = Series, splitCols = 'HaveWorkedLanguage', sep = ";", direction = "long")
Series2017
Series2017 = Series2017 %>% mutate(Percentage = Freq/sum(Freq)*100)
Series2017
View(Series2017)
Series2017 = Series2017 %>% mutate(Percentage = round(Freq/sum(Freq)*100),2)
Series2017 = Series2017 %>% mutate(Percentage = round(Freq/sum(Freq)*100,2))
Series2017 = Series2017 %>% mutate(Percentage = round(Freq/sum(Freq)*100,2))
Series = Data2017 %>% select(Respondent,HaveWorkedLanguage) %>%
filter(!is.na(HaveWorkedLanguage))
Series_long = cSplit(indt = Series, splitCols = 'HaveWorkedLanguage', sep = ";", direction = "long")
Series2017 = Series_long %>%
filter(HaveWorkedLanguage %in% c('Python','SQL','Java','R')) %>%
group_by(HaveWorkedLanguage) %>% summarise(Freq = n())
View(Series2017)
Series2017 = Series2017 %>% mutate(Percentage = round(Freq/sum(Freq)*100,2))
sum(Series2017$Percentage)
Series2017 = Series2017 %>% mutate(Percentage = round(Freq/sum(Freq)*100,3))
sum(Series2017$Percentage)
Series2017 = Series_long %>% mutate(Percentage = round(Freq/sum(Freq)*100,3)) %>%
filter(HaveWorkedLanguage %in% c('Python','SQL','Java','R')) %>%
group_by(HaveWorkedLanguage) %>% summarise(Freq = n())
Series2017 = Series_long %>%
group_by(HaveWorkedLanguage) %>% summarise(Freq = n()) %>%
mutate(Percentage = round(Freq/sum(Freq)*100,3)) %>%
filter(HaveWorkedLanguage %in% c('Python','SQL','Java','R'))
Series2017 = Series_long %>%
group_by(HaveWorkedLanguage) %>% summarise(Freq = n())
Series2017 = Series_long %>%
group_by(HaveWorkedLanguage) %>% summarise(Freq = n()) %>%
mutate(Percentage = round(Freq/sum(Freq)*100,3))
1634/sum(Series2017$Freq)
Series2017 = Data2017 %>% select(Respondent,HaveWorkedLanguage) %>%
filter(!is.na(HaveWorkedLanguage))
Series_long = cSplit(indt = Series2017, splitCols = 'HaveWorkedLanguage', sep = ";", direction = "long")
Summary2017 = Series_long %>%
group_by(HaveWorkedLanguage) %>%
summarise(Freq = n()) %>%
mutate(Percentage = round(Freq/sum(Freq)*100,3)) %>%
filter(HaveWorkedLanguage %in% c('Python','SQL','Java','R'))
View(Summary2017)
Series2016 = Data2016 %>% select(Respondent,HaveWorkedLanguage) %>%
filter(!is.na(HaveWorkedLanguage))
Series_long = cSplit(indt = Series2016, splitCols = 'HaveWorkedLanguage', sep = ";", direction = "long")
Summary2016 = Series_long %>%
group_by(HaveWorkedLanguage) %>%
summarise(Freq = n()) %>%
mutate(Percentage = round(Freq/sum(Freq)*100,3)) %>%
filter(HaveWorkedLanguage %in% c('Python','SQL','Java','R'))
View(Summary2016)
Series2016 = Data2016 %>% select(Respondent,HaveWorkedLanguage) %>%
filter(!is.na(HaveWorkedLanguage))
head(Data2016)
x = head(Data2016)
View(x)
View(x)
Series2016 = Data2016 %>% select(X,tech_do) %>%
filter(!is.na(tech_do))
View(Series2016)
Series2016 = Data2016 %>% select(X,tech_do) %>%
filter(!is.na(tech_do))
View(Series2016)
# Data from 2016
Data2016 = read.csv('data/2016 Stack Overflow Survey Results/2016 Stack Overflow Survey Responses.csv',
strip.white = TRUE)
Series2016 = Data2016 %>% select(X,tech_do) %>%
filter(!is.na(tech_do))
View(Series2016)
# Data from 2016
Data2016 = read.csv('data/2016 Stack Overflow Survey Results/2016 Stack Overflow Survey Responses.csv',
strip.white = FALSE)
Series2016 = Data2016 %>% select(X,tech_do) %>%
filter(!is.na(tech_do))
View(Series2016)
# Data from 2016
Data2016 = read.csv('data/2016 Stack Overflow Survey Results/2016 Stack Overflow Survey Responses.csv',
strip.white = TRUE)
Series2016 = Data2016 %>% select(X,tech_do) %>%
filter(!is.na(tech_do))
# Data from 2016
Data2016 = read.csv('data/2016 Stack Overflow Survey Results/2016 Stack Overflow Survey Responses.csv')
Series2016 = Data2016 %>% select(X,tech_do) %>%
filter(!is.na(tech_do))
Series2016 = Data2016 %>% select(X,tech_do) %>%
filter(!is.na(tech_do))
library("data.table")
# Data from 2016
library("data.table")
class(Data2016)
testdata <- data.frame(fread("data/2016 Stack Overflow Survey Results/2016 Stack Overflow Survey Responses.csv"))
Data2016 <- data.frame(fread("data/2016 Stack Overflow Survey Results/2016 Stack Overflow Survey Responses.csv"))
Series2016 = Data2016 %>% select(X,tech_do) %>%
filter(!is.na(tech_do))
Data2016 <- data.frame(fread("data/2016 Stack Overflow Survey Results/2016 Stack Overflow Survey Responses.csv"), data.table = FALSE)
Series2016 = Data2016 %>% select(X,tech_do) %>%
filter(!is.na(tech_do))
View(Data2016)
Series2016 = Data2016 %>% select(V1,tech_do) %>%
filter(!is.na(tech_do))
View(Series2016)
Data2016 = read.csv('data/2016 Stack Overflow Survey Results/2016 Stack Overflow Survey Responses.csv')
Series2016 = Data2016 %>% select(X,tech_do) %>%
filter(!is.na(tech_do))
Series_long = cSplit(indt = Series2016, splitCols = 'HaveWorkedLanguage', sep = ";", direction = "long")
Series2016 = Data2016 %>% select(X,tech_do) %>%
filter(!is.na(tech_do)) %>%
rename(tech_do = HaveWorkedLanguage)
View(Series2016)
Series2016 = Data2016 %>% select(X,tech_do) %>%
filter(!is.na(tech_do)) %>%
rename(HaveWorkedLanguage = tech_do)
Series2016 = Data2016 %>% select(X,tech_do) %>%
filter(!is.na(tech_do)) %>%
rename(Respondent = X, HaveWorkedLanguage = tech_do)
Series_long = cSplit(indt = Series2016, splitCols = 'HaveWorkedLanguage', sep = ";", direction = "long")
Summary2016 = Series_long %>%
group_by(HaveWorkedLanguage) %>%
summarise(Freq = n()) %>%
mutate(Percentage = round(Freq/sum(Freq)*100,3)) %>%
filter(HaveWorkedLanguage %in% c('Python','SQL','Java','R'))
View(Summary2016)
Summary2017 = Series_long %>%
group_by(HaveWorkedLanguage) %>%
summarise(Freq = n()) %>%
mutate(Percentage = round(Freq/sum(Freq)*100,3), Year = '2017') %>%
filter(HaveWorkedLanguage %in% c('Python','SQL','Java','R'))
Series_long = cSplit(indt = Series2017, splitCols = 'HaveWorkedLanguage', sep = ";", direction = "long")
Summary2017 = Series_long %>%
group_by(HaveWorkedLanguage) %>%
summarise(Freq = n()) %>%
mutate(Percentage = round(Freq/sum(Freq)*100,3), Year = '2017') %>%
filter(HaveWorkedLanguage %in% c('Python','SQL','Java','R'))
Summary2016 = Series_long %>%
group_by(HaveWorkedLanguage) %>%
summarise(Freq = n()) %>%
mutate(Percentage = round(Freq/sum(Freq)*100,3),, Year = '2016') %>%
filter(HaveWorkedLanguage %in% c('Python','SQL','Java','R'))
Summary2016 = Series_long %>%
group_by(HaveWorkedLanguage) %>%
summarise(Freq = n()) %>%
mutate(Percentage = round(Freq/sum(Freq)*100,3), Year = '2016') %>%
filter(HaveWorkedLanguage %in% c('Python','SQL','Java','R'))
x<-rbind(Summary2017,Summary2016)
View(x)
ggplot(x,aes(Year,HaveWorkedLanguage)) + geom_line()
ggplot(x,aes(Year,Percentage)) + geom_line()
ggplot(x,aes(Year,Percentage)) + geom_line() + facet_wrap(~HaveWorkedLanguage)
x
ggplot(x,aes(Year,Percentage)) + geom_smooth() + facet_wrap(~HaveWorkedLanguage)
ggplot(x,aes(x=Year,y=Percentage)) + geom_smo() + facet_wrap(~HaveWorkedLanguage)
ggplot(x,aes(x=Year,y=Percentage)) + geom_line() + facet_wrap(~HaveWorkedLanguage)
Data2016 = read.csv('data/2016 Stack Overflow Survey Results/2016 Stack Overflow Survey Responses.csv')
Series2016 = Data2016 %>% select(X,tech_do) %>%
filter(!is.na(tech_do)) %>%
rename(Respondent = X, HaveWorkedLanguage = tech_do)
Series_long = cSplit(indt = Series2016, splitCols = 'HaveWorkedLanguage', sep = ";", direction = "long")
Summary2016 = Series_long %>%
group_by(HaveWorkedLanguage) %>%
summarise(Freq = n()) %>%
mutate(Percentage = round(Freq/sum(Freq)*100,3), Year = '2016') %>%
filter(HaveWorkedLanguage %in% c('Python','SQL','Java','R'))
x<-rbind(Summary2017,Summary2016)
ggplot(x,aes(x=Year,y=Percentage)) + geom_line() + facet_wrap(~ HaveWorkedLanguage)
dummy = read.csv('dummy.csv')
dummy
ggplot(dummy,aes(Year,Percentage))
ggplot(dummy,aes(Year,Percentage)) + geom_line()
ggplot(dummy,aes(Year,Percentage)) + geom_smooth()
ggplot(dummy,aes(Year,Percentage)) + geom_line()
dummy = read.csv('dummy.csv')
ggplot(dummy,aes(Year,Percentage)) + geom_line()
dummy
ggplot(dummy,aes(Year,Percentage)) + geom_line() + facet_wrap(~HaveWorkedLanguage)
dummy = read.csv('dummy.csv')
ggplot(dummy,aes(Year,Percentage)) + geom_line() + facet_wrap(~HaveWorkedLanguage)
Summary = rbind(Summary2017,Summary2016)
Summary
Summary2016 = Series_long %>%
group_by(HaveWorkedLanguage) %>%
summarise(Freq = n()) %>%
mutate(Percentage = round(Freq/sum(Freq)*100,3), Year = as.Date('2016')) %>%
filter(HaveWorkedLanguage %in% c('Python','SQL','Java','R'))
Summary2016 = Series_long %>%
group_by(HaveWorkedLanguage) %>%
summarise(Freq = n()) %>%
mutate(Percentage = round(Freq/sum(Freq)*100,3), Year = as.Date('2016', "%Y")) %>%
filter(HaveWorkedLanguage %in% c('Python','SQL','Java','R'))
Summary2016 = Series_long %>%
group_by(HaveWorkedLanguage) %>%
summarise(Freq = n()) %>%
mutate(Percentage = round(Freq/sum(Freq)*100,3), Year = '2016') %>%
filter(HaveWorkedLanguage %in% c('Python','SQL','Java','R'))
ggplot(Summary,aes(x=Year,y=Percentage)) + geom_line() + facet_wrap(~ HaveWorkedLanguage)
dummy = read.csv('dummy.csv')
ggplot(dummy,aes(Year,Percentage)) + geom_line() + facet_wrap(~HaveWorkedLanguage)
fahr_to_kelvin <- function(temp) {
kelvin <- ((temp - 32) * (5 / 9)) + 273.15
return(kelvin)
}
fahr_to_kelvin(32)
return(n+10)
plus10 <- function(n) {
return(n+10)
}
plus10(0)
plus10(5)
fahr_to_kelvin = function(temp) {
kelvin <- ((temp - 32) * (5 / 9)) + 273.15
return(kelvin)
}
fahr_to_kelvin(32)
plus10 = function(n) {
return(n+10)
}
plus10(5)
LanguageSummary = function(Series_long,InputYear) {
Summary = Series_long %>%
group_by(HaveWorkedLanguage) %>%
summarise(Freq = n()) %>%
mutate(Percentage = round(Freq/sum(Freq)*100,3), Year = InputYear) %>%
filter(HaveWorkedLanguage %in% c('Python','SQL','Java','R'))
return(Summary)
}
x = LanguageSummary(Series_long,'2016')
View(x)
LanguageSummary = function(Series_long,InputYear) {
Summary = Series_long %>%
group_by(HaveWorkedLanguage) %>%
summarise(Freq = n()) %>%
mutate(Percentage = round(Freq/sum(Freq)*100,3), Year = InputYear) %>%
filter(HaveWorkedLanguage %in% c('Python','SQL','Java','R'))
return(Summary)
}
# Extract the value
x = LanguageSummary(Series_long,'2017')
View(x)
Series2017 = Data2017 %>% select(Respondent,HaveWorkedLanguage) %>%
filter(!is.na(HaveWorkedLanguage))
Series_long = cSplit(indt = Series2017, splitCols = 'HaveWorkedLanguage', sep = ";", direction = "long")
# Extract the value
x = LanguageSummary(Series_long,'2017')
# Extract the value
Summary2017 = LanguageSummary(Series_long,'2017')
Data2016 = read.csv('data/2016 Stack Overflow Survey Results/2016 Stack Overflow Survey Responses.csv')
Series2016 = Data2016 %>% select(X,tech_do) %>%
filter(!is.na(tech_do)) %>%
rename(Respondent = X, HaveWorkedLanguage = tech_do)
Series_long = cSplit(indt = Series2016, splitCols = 'HaveWorkedLanguage', sep = ";", direction = "long")
Summary2016 = LanguageSummary(Series_long,'2016')
Summary = rbind(Summary2017,Summary2016)
View(Summary)
Data2015 = read.csv('2015 Stack Overflow Developer Survey Responses.csv')
Data2015 = read.csv('data/2015 Stack Overflow Developer Survey Responses.csv')
View(Data2015)
Series2015 = Data2015 %>% select(starts_with("Current Lang & Tech:"))
View(Series2015)
Series2015 = Data2015 %>% select(starts_with("Current Lang & Tech"))
Data2015 = read.csv('data/2015 Stack Overflow Developer Survey Responses.csv')
select(Data2015,starts_with("Current Lang & Tech"))
select(Data2015,starts_with("Current Lang \& Tech"))
select(Data2015,starts_with("Current Lang \\& Tech"))
select(Data2015,starts_with("Current Lang "))
select(Data2015,starts_with("Current "))
select(Data2015,starts_with("Current"))
View(Data2015)
Data2015 = read.csv('data/2015 Stack Overflow Developer Survey Responses.csv',skip = 1)
select(Data2015,starts_with("Current Lang & Tech"))
select(Data2015,starts_with("Current Lang"))
str(Data2015)
select(Data2015,starts_with("Current.Lang"))
Series2015 = Data2015 %>% select(starts_with("Current.Lang"))
View(Series2015)
# your starting data..
data <- data.frame('a' = 1:3, 'b' = c('a','b','c'), 'c' = c('d', 'e', 'f'), 'd' = c('g', 'h', 'i'))
data
# columns to paste together
cols <- c( 'b' , 'c' , 'd' )
# create a new column `x` with the three columns collapsed together
data$x <- apply( data[ , cols ] , 1 , paste , collapse = "-" )
data
